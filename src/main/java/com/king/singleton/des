type1恶汉式  内存浪费   可以用
type2恶汉式  内存浪费   可以用

type3懒汉式  线程不安全
type4懒汉式  解决了线程问题，但是效率太低了；每个线程在想获得类的实例时候，执行getInstance()都要获得同步；而其实这个方法只执行一次实例化就够了，后面的想获得该类实例，直接return就行了 ，方法进行同步效率太低
type5懒汉式  线程不安全  因为还是会有多个线程进入if里面，然后一次new对象

type6双重检查：   推荐使用
type7静态内部类   推荐使用       静态内部类方式在SingleTonType7被装载时并不会实例化，而是在调用getInstance转载InClass类才会实例化type7对象
                               JVM帮我们保证了线程的安全：因为InClass类的静态属性只会在第一次加载类InClass的时候初始化；在初始化时别的线程无法进入


type8枚举        推荐使用



